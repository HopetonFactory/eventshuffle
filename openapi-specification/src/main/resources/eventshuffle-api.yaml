openapi: 3.0.2
info:
  title: Eventshuffle
  description: 'Eventshuffle backend specification'
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0-SNAPSHOT
tags:
  - name: event
    description: 'Operations about event'
    externalDocs:
      description: 'Find out more about events'
      url: http://swagger.io
paths:
  /api/v1/event/:
    post:
      tags:
        - event
      summary: 'Create an event'
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposedEvent'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventId'
        400:
          description: 'Invalid Event'
  /api/v1/event/list:
    get:
      tags:
        - event
      summary: 'List all events'
      operationId: listAllEvents
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        400:
          description: Bad Request
  /api/v1/event/{id}:
    get:
      tags:
        - event
      summary: 'Show an event'
      operationId: showEvent
      parameters:
        - name: id
          in: path
          description: 'ID of the event'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        400:
          description: Bad Request
  /api/v1/event/{id}/vote:
    post:
      tags:
        - event
      summary: 'Add vote to an event'
      operationId: voteEvent
      parameters:
        - name: id
          in: path
          description: 'ID of the event'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventVote'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventVoteResponse'
        400:
          description: Bad Request
  /api/v1/event/{id}/results:
    get:
      tags:
        - event
      summary: 'Responds with dates that are suitable for all participants.'
      operationId: eventResults
      parameters:
        - name: id
          in: path
          description: 'ID of the event'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResultResponse'
        400:
          description: Bad Request

components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ProposedEvent:
      type: object
      properties:
        name:
          type: string
        dates:
          type: array
          items:
            type: string
            format: date
            description: 'Proposed date'
            example: 2021-02-08
    EventVote:
      type: object
      properties:
        name:
          type: string
        votes:
          type: array
          items:
            type: string
            format: date
            description: 'Voted dates'
            example: 2021-02-08
    EventId:
      type: object
      properties:
        id:
          type: integer
          format: int64
    SuitableDate:
      type: object
      properties:
        date:
          type: string
          format: date
          description: 'Proposed date'
          example: 2021-02-08
        people:
          type: array
          items:
            type: string
    EventResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        votes:
          type: array
          items:
            $ref: '#/components/schemas/SuitableDate'
    EventVoteResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        votes:
          type: array
          items:
            $ref: '#/components/schemas/SuitableDate'
    EventResultResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        suitableDates:
          type: array
          items:
            $ref: '#/components/schemas/SuitableDate'
