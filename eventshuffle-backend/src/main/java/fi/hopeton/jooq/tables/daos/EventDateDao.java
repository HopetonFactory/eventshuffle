/*
 * This file is generated by jOOQ.
 */
package fi.hopeton.jooq.tables.daos;


import fi.hopeton.jooq.tables.EventDate;
import fi.hopeton.jooq.tables.records.EventDateRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import java.time.LocalDate;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class EventDateDao extends DAOImpl<EventDateRecord, fi.hopeton.jooq.tables.pojos.EventDate, Long> {

    /**
     * Create a new EventDateDao without any configuration
     */
    public EventDateDao() {
        super(EventDate.EVENT_DATE, fi.hopeton.jooq.tables.pojos.EventDate.class);
    }

    /**
     * Create a new EventDateDao with an attached configuration
     */
    public EventDateDao(Configuration configuration) {
        super(EventDate.EVENT_DATE, fi.hopeton.jooq.tables.pojos.EventDate.class, configuration);
    }

    @Override
    public Long getId(fi.hopeton.jooq.tables.pojos.EventDate object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.EventDate> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(EventDate.EVENT_DATE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.EventDate> fetchById(Long... values) {
        return fetch(EventDate.EVENT_DATE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public fi.hopeton.jooq.tables.pojos.EventDate fetchOneById(Long value) {
        return fetchOne(EventDate.EVENT_DATE.ID, value);
    }

    /**
     * Fetch records that have <code>PROPOSED_DATE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.EventDate> fetchRangeOfProposedDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(EventDate.EVENT_DATE.PROPOSED_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROPOSED_DATE IN (values)</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.EventDate> fetchByProposedDate(LocalDate... values) {
        return fetch(EventDate.EVENT_DATE.PROPOSED_DATE, values);
    }

    /**
     * Fetch records that have <code>EVENT_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.EventDate> fetchRangeOfEventId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(EventDate.EVENT_DATE.EVENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EVENT_ID IN (values)</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.EventDate> fetchByEventId(Long... values) {
        return fetch(EventDate.EVENT_DATE.EVENT_ID, values);
    }
}
