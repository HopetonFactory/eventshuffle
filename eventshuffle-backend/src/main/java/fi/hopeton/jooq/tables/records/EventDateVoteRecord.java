/*
 * This file is generated by jOOQ.
 */
package fi.hopeton.jooq.tables.records;


import fi.hopeton.jooq.tables.EventDateVote;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class EventDateVoteRecord extends UpdatableRecordImpl<EventDateVoteRecord> implements Record4<Long, String, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>EVENT_DATE_VOTE.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Create a detached EventDateVoteRecord
     */
    public EventDateVoteRecord() {
        super(EventDateVote.EVENT_DATE_VOTE);
    }

    /**
     * Setter for <code>EVENT_DATE_VOTE.VOTING_PERSON</code>.
     */
    public void setVotingPerson(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>EVENT_DATE_VOTE.VOTING_PERSON</code>.
     */
    public String getVotingPerson() {
        return (String) get(1);
    }

    /**
     * Setter for <code>EVENT_DATE_VOTE.EVENT_DATE_ID</code>.
     */
    public void setEventDateId(Long value) {
        set(2, value);
    }

    /**
     * Create a detached, initialised EventDateVoteRecord
     */
    public EventDateVoteRecord(Long id, String votingPerson, Long eventDateId, Long version) {
        super(EventDateVote.EVENT_DATE_VOTE);

        setId(id);
        setVotingPerson(votingPerson);
        setEventDateId(eventDateId);
        setVersion(version);
    }

    /**
     * Getter for <code>EVENT_DATE_VOTE.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Getter for <code>EVENT_DATE_VOTE.EVENT_DATE_ID</code>.
     */
    public Long getEventDateId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>EVENT_DATE_VOTE.VERSION</code>.
     */
    public Long getVersion() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>EVENT_DATE_VOTE.VERSION</code>.
     */
    public void setVersion(Long value) {
        set(3, value);
    }

    @Override
    public Field<Long> field1() {
        return EventDateVote.EVENT_DATE_VOTE.ID;
    }

    @Override
    public Field<String> field2() {
        return EventDateVote.EVENT_DATE_VOTE.VOTING_PERSON;
    }

    @Override
    public Field<Long> field3() {
        return EventDateVote.EVENT_DATE_VOTE.EVENT_DATE_ID;
    }

    @Override
    public Row4<Long, String, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getVotingPerson();
    }

    @Override
    public Long component3() {
        return getEventDateId();
    }

    @Override
    public Row4<Long, String, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getVotingPerson();
    }

    @Override
    public Long value3() {
        return getEventDateId();
    }

    @Override
    public Field<Long> field4() {
        return EventDateVote.EVENT_DATE_VOTE.VERSION;
    }

    @Override
    public EventDateVoteRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EventDateVoteRecord value2(String value) {
        setVotingPerson(value);
        return this;
    }

    @Override
    public EventDateVoteRecord value3(Long value) {
        setEventDateId(value);
        return this;
    }

    @Override
    public EventDateVoteRecord value4(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public EventDateVoteRecord values(Long value1, String value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public Long component4() {
        return getVersion();
    }

    @Override
    public Long value4() {
        return getVersion();
    }
}
