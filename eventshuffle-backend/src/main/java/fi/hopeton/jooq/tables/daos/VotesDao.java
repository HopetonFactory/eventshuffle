/*
 * This file is generated by jOOQ.
 */
package fi.hopeton.jooq.tables.daos;


import fi.hopeton.jooq.tables.Votes;
import fi.hopeton.jooq.tables.records.VotesRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class VotesDao extends DAOImpl<VotesRecord, fi.hopeton.jooq.tables.pojos.Votes, Integer> {

    /**
     * Create a new VotesDao without any configuration
     */
    public VotesDao() {
        super(Votes.VOTES, fi.hopeton.jooq.tables.pojos.Votes.class);
    }

    /**
     * Create a new VotesDao with an attached configuration
     */
    public VotesDao(Configuration configuration) {
        super(Votes.VOTES, fi.hopeton.jooq.tables.pojos.Votes.class, configuration);
    }

    @Override
    public Integer getId(fi.hopeton.jooq.tables.pojos.Votes object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.Votes> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Votes.VOTES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.Votes> fetchById(Integer... values) {
        return fetch(Votes.VOTES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public fi.hopeton.jooq.tables.pojos.Votes fetchOneById(Integer value) {
        return fetchOne(Votes.VOTES.ID, value);
    }

    /**
     * Fetch records that have <code>VOTING_PERSON_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.Votes> fetchRangeOfVotingPersonId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Votes.VOTES.VOTING_PERSON_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>VOTING_PERSON_ID IN (values)</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.Votes> fetchByVotingPersonId(Long... values) {
        return fetch(Votes.VOTES.VOTING_PERSON_ID, values);
    }

    /**
     * Fetch records that have <code>PROPOSED_DATES BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.Votes> fetchRangeOfProposedDates(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Votes.VOTES.PROPOSED_DATES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROPOSED_DATES IN (values)</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.Votes> fetchByProposedDates(Long... values) {
        return fetch(Votes.VOTES.PROPOSED_DATES, values);
    }
}
