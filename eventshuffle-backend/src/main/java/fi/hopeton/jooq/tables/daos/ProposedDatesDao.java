/*
 * This file is generated by jOOQ.
 */
package fi.hopeton.jooq.tables.daos;


import fi.hopeton.jooq.tables.ProposedDates;
import fi.hopeton.jooq.tables.records.ProposedDatesRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import java.time.LocalDate;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProposedDatesDao extends DAOImpl<ProposedDatesRecord, fi.hopeton.jooq.tables.pojos.ProposedDates, Integer> {

    /**
     * Create a new ProposedDatesDao without any configuration
     */
    public ProposedDatesDao() {
        super(ProposedDates.PROPOSED_DATES, fi.hopeton.jooq.tables.pojos.ProposedDates.class);
    }

    /**
     * Create a new ProposedDatesDao with an attached configuration
     */
    public ProposedDatesDao(Configuration configuration) {
        super(ProposedDates.PROPOSED_DATES, fi.hopeton.jooq.tables.pojos.ProposedDates.class, configuration);
    }

    @Override
    public Integer getId(fi.hopeton.jooq.tables.pojos.ProposedDates object) {
        return object.getProposedDateId();
    }

    /**
     * Fetch records that have <code>PROPOSED_DATE_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.ProposedDates> fetchRangeOfProposedDateId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProposedDates.PROPOSED_DATES.PROPOSED_DATE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROPOSED_DATE_ID IN (values)</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.ProposedDates> fetchByProposedDateId(Integer... values) {
        return fetch(ProposedDates.PROPOSED_DATES.PROPOSED_DATE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PROPOSED_DATE_ID = value</code>
     */
    public fi.hopeton.jooq.tables.pojos.ProposedDates fetchOneByProposedDateId(Integer value) {
        return fetchOne(ProposedDates.PROPOSED_DATES.PROPOSED_DATE_ID, value);
    }

    /**
     * Fetch records that have <code>EVENT_DATE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.ProposedDates> fetchRangeOfEventDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(ProposedDates.PROPOSED_DATES.EVENT_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EVENT_DATE IN (values)</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.ProposedDates> fetchByEventDate(LocalDate... values) {
        return fetch(ProposedDates.PROPOSED_DATES.EVENT_DATE, values);
    }

    /**
     * Fetch records that have <code>EVENT_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.ProposedDates> fetchRangeOfEventId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ProposedDates.PROPOSED_DATES.EVENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EVENT_ID IN (values)</code>
     */
    public List<fi.hopeton.jooq.tables.pojos.ProposedDates> fetchByEventId(Long... values) {
        return fetch(ProposedDates.PROPOSED_DATES.EVENT_ID, values);
    }
}
