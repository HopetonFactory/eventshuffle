/*
 * This file is generated by jOOQ.
 */
package fi.hopeton.jooq;


import fi.hopeton.jooq.tables.Events;
import fi.hopeton.jooq.tables.Persons;
import fi.hopeton.jooq.tables.ProposedDates;
import fi.hopeton.jooq.tables.Votes;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>DEFAULT_SCHEMA</code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>EVENTS</code>.
     */
    public final Events EVENTS = Events.EVENTS;

    /**
     * The table <code>PERSONS</code>.
     */
    public final Persons PERSONS = Persons.PERSONS;

    /**
     * The table <code>PROPOSED_DATES</code>.
     */
    public final ProposedDates PROPOSED_DATES = ProposedDates.PROPOSED_DATES;

    /**
     * The table <code>VOTES</code>.
     */
    public final Votes VOTES = Votes.VOTES;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
                Events.EVENTS,
                Persons.PERSONS,
                ProposedDates.PROPOSED_DATES,
                Votes.VOTES);
    }
}
